<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>👣 Struggle</title>
    <link href="https://1ocate.github.io/blog" />
    <link type="application/atom+xml" rel="self" href="https://1ocate.github.io/blog/feed.atom" />
    <updated>2023-02-25T04:17:23+00:00</updated>
    <id>https://1ocate.github.io/blog/feed.atom</id>
    <author>
        <name>1ocate</name>
    </author>
                <entry>
    <id>https://1ocate.github.io/wezterm-wsl</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/wezterm-wsl" />
    <title>WSL사용시 Wezterm설정 Windows와 공유하는법</title>
    <published>2023-02-25T00:00:00+00:00</published>
    <updated>2023-02-25T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">wezterm은 윈도우, 리눅스, 맥에서 사용할 수 있는 러스트기반의 터미널이다.

Windows에서 Wezterm 사용시 Windows에서 설정을 관리하기에 WSL에서 관리가 안되는 문제가 있다.
WSL에서 먼저 &#039;git clone&#039;......</summary>
    <content type="html"><![CDATA[
        <p><a href="https://wezfurlong.org/wezterm/">wezterm</a>은 윈도우, 리눅스, 맥에서 사용할 수 있는 러스트기반의 터미널이다.</p>

<p>Windows에서 Wezterm 사용시 Windows에서 설정을 관리하기에 WSL에서 관리가 안되는 문제가 있다.
WSL에서 먼저 'git clone' 이후 수동으로 복사해서 Windows 현재 사용자 디렉토리에 복사해서 넣어줘야 
다른 기기에서 수정된 설정을 사용할 수 있다.</p>

<h2>해결</h2>

<p>mklink는 Windows 심볼릭 링크 명령어이다.
WSL 디렉토리를 네트워크 경로를 통해 접근 가능하므로 네트워크 경로의 파일을
심볼릭 링크 걸어주면, git 으로 관리중인 설정파일에 접근이 가능하다.</p>

<p>Widnows cmd에서 아래 명령 실행</p>

<pre><code class="language-DOS"><br /># Windows 홈 디렉토리로 이동 (.wezterm.lua 경로)
cd %userprofile% 
rename ".wezter.lua" ".wezterm.lua_bak"
mklink  .wezterm.lua  \\wsl$\Ubuntu\home\locate\.dotfiles\.wezter.lua

</code></pre>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/bye-2022</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/bye-2022" />
    <title>2022년 돌아보기</title>
    <published>2022-12-31T00:00:00+00:00</published>
    <updated>2022-12-31T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">올해는 변화한 일이 많이 있었다.
몇가지만 남겨본다.




인도네시아에서 귀국





인라이플 입사
Neovim 본격 사용시작
해피해킹 클래식 구입





VIMRC 2022 참가





웹서비스 개발팀으로......</summary>
    <content type="html"><![CDATA[
        <p>올해는 변화한 일이 많이 있었다.
몇가지만 남겨본다.</p>

<h2>3월</h2>

<ul>
<li>인도네시아에서 귀국</li>
</ul>

<h2>4월</h2>

<ul>
<li>인라이플 입사</li>
<li>Neovim 본격 사용시작</li>
<li>해피해킹 클래식 구입</li>
</ul>

<h2>7월</h2>

<ul>
<li>VIMRC 2022 참가</li>
</ul>

<h2>8월</h2>

<ul>
<li>웹서비스 개발팀으로 부서이동</li>
</ul>

<h2>9월</h2>

<ul>
<li>박연오님과 커피쳇</li>
</ul>

<h2>12월</h2>

<ul>
<li>Dev.Inn Tech Meetup 성장하는 개발자의 길 참가</li>
<li>Mordern PHP User 송년회 참가</li>
<li>au VimEnter * call Bye2022 참가</li>
<li>테스트 코드 작성 시도</li>
</ul>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/tech-meetup</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/tech-meetup" />
    <title>Dev.Inn Tech Meetup 성장하는 개발자의 길</title>
    <published>2022-12-09T00:00:00+00:00</published>
    <updated>2022-12-09T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">&lt;code&gt;CTO CJ Networks 신정호&lt;/code&gt;

CTO가된 이후 스트레스를 많이 받아 고민이 많아 같은 C레벨 분께 상담을 받았지만 바빠서 참여하기 어려웠음.

3개월의 상담과정에서 마지막에 상담자분의 하신......</summary>
    <content type="html"><![CDATA[
        <h1>오프닝</h1>

<p><code>CTO CJ Networks 신정호</code></p>

<p>CTO가된 이후 스트레스를 많이 받아 고민이 많아 같은 C레벨 분께 상담을 받았지만 바빠서 참여하기 어려웠음.</p>

<p>3개월의 상담과정에서 마지막에 상담자분의 하신 말씀이 가장에 기억에 남음.</p>

<blockquote>
  <p>"C레벨의 숙명은 성장 무조건 성장 시켜야 한다, 절대적 가치, 숙제"</p>
</blockquote>

<p>본인이 생각하는 성장의 뜻</p>

<blockquote>
  <p>"구성원 개개인의 성장이 조직의 성장"</p>
</blockquote>

<p>본인이 생각하는 성장의 반대는 무엇인가?</p>

<blockquote>
  <p>"퇴보, 정체?"<br />
  "성장의 끝점에서 이뤄지는 기존 행동의 반복"</p>
</blockquote>

<p>거울나라 엘리스에서 붉은 여왕이 엘리스에게 하는 말</p>

<blockquote>
  <p>"여기서는 같은 곳에 있으려면 쉬지 않고 힘껏 달려야 해.<br />
  어딘가 다른 데로 가고 싶으면 적어도 그보다 두 곱은 빨리 달려야 하고."</p>
</blockquote>

<p>리 밴 베일런의 "붉은 여왕 가설"</p>

<blockquote>
  <p>주변 자연환경이나 경쟁 대상이 보다 빠른 속도로 변화하려하기 때문에 어떤 생물이 진화를 하게 되더라도 상대적으로 적자생존에 뒤처지게 되며, 이를 보상하기 위해 끊임없이 서로 재시도를 하는 과정에서 결국 자연계의 진화경쟁에선 어느 한쪽이 일방적인 승리를 거두지 못한다는 뜻<br />
  <a href="https://ko.wikipedia.org/wiki/%EB%B6%89%EC%9D%80_%EC%97%AC%EC%99%95_%EA%B0%80%EC%84%A4">위키피디아 - 붉은 여왕 가설</a></p>
</blockquote>

<p>Accenture Ceo 피에르 낭텀</p>

<blockquote>
  <p>"하이퍼포먼스기업 성장경로는 성공적으로 S곡선을 갈아타는 기업"<br />
  "성장할 때 다음에 올라탈 s곡선을 준비하라 갈아타지 못하면 그 기업은 죽는다."</p>
</blockquote>

<p><img src="http://pds18.egloos.com/pds/201104/02/50/a0100750_4d9710bd7ae36.jpg" alt="img" />
출처:<a href="http://egloos.zum.com/misalee2/v/10687221">성공 기업 만들려면S곡선이탈하지마라</a></p>

<hr />

<h1>개발자와 기업이 함께 성장하는 기술 커뮤니티 그리고 디벨로퍼 릴레이션</h1>

<p><code>우아한형제들 조은옥님</code></p>

<p>어떻게 개발자의 성장이 기업의 성장으로 이어지는가?</p>

<blockquote>
  <p>"답은 기술 커뮤니티에 있다."</p>
</blockquote>

<h2>커뮤니티?</h2>

<blockquote>
  <p>"경험과 노하우"를 발전시키고 공유하므로써 그룹 구성원들이 성장할 수 있도록 돕는 집단"<br />
  "기업 안에서 존재 할 수 있다."</p>
</blockquote>

<h3>기업 바깥의 커뮤니티 가치</h3>

<pre><code>* 기술/개발에 대한 트랜드를 파악
* 개발자의 요즘 관심사를 알 수 있음
* 자사의 인지도를 높임
</code></pre>

<h4>개발자향 기술 프로덕트를 가진 기업</h4>

<pre><code>* 피드백을 받을 수 있고, 개선점 파악
* 기존유저의 노하우로 신규유저의 학습 진입장벽 낮춤
* 유저가 자발적인 지지자 홍보대사
</code></pre>

<h3>기업 내부의 커뮤니티</h3>

<pre><code>* 구성원의 역량향상과 성장을 도와줌
* 회사에 대한 소속감을 높임
* 조직간 사일로 해소
* 내부 구성원의 목소리를 통한 조직문화와 긍정적 인식을 외부에 전파하는 채널
</code></pre>

<p>기업의 바깥과 안을 통해 함께하고 커뮤니티 키움</p>

<h2>Developer Relations?</h2>

<h3>개발자를 보는 시각</h3>

<pre><code>1) 개발자가 고객   
2) 개발자가 핵심인재 및 채용의 대상
</code></pre>

<h3>Public Relations</h3>

<blockquote>
  <p>기업이 대중, 공중과 우호적인 관계를 만들기 위한 활동<br />
  ex) 언론홍보, 기자회견, 공중파출현, 소셜미디어, 세미나, 컨퍼런스</p>
</blockquote>

<h3>Developer Relations</h3>

<blockquote>
  <p>기업이 개발자와의 우호적 관계<br />
  ex) 언론홍보, 기자회견, 공중파출현, 소셜미디어, 세미나, 컨퍼런스
  전문적인 개발자 오디언스</p>
</blockquote>

<h3>시작</h3>

<h4>에벤젤리스트의 등장</h4>

<p>애플의 "가이 가와사키"를 통해 애플 기기의 우수성 실리콘밸리에 전파함과 동시에<br />
"가이 가와사키" 중심으로 커뮤니티가 만들어짐</p>

<pre><code>* 제품/솔루션의 장점 소개
* 사람들이 잘 활용 할 수 있도록 도움
* 유저 커뮤니티를 만들어감
</code></pre>

<p>결과: 애플의 마케팅 전략을 바꾸고 애플의 전성기 시대를 도래하게 함.</p>

<p>단점 
    - 에반젤리스트의 단어가 종교적 색체
    - 커뮤니티가 성장하는데 영업KPI로 위기</p>

<p>책 "가이 가와사키의 시장을 지배하는 마케팅"</p>

<h4>디벨로퍼 애드보케이트으로 변화</h4>

<pre><code>* 멘토링 코칭, 기술에 대한 백그라운드
* 기술 커뮤니티와 개발자들의 목소리를 대변
* 상생을 위함
</code></pre>

<p>외국계 IT 회사의 DevRel 직무</p>

<pre><code>* 유저 그로스 전략수립  
* 개발자 행사 기획 및 운영 
* 개발자 커뮤니티 운영 및 지원 
* 기술 블로그, 소셜미디어, 콘텐츠 제작 
* 대학생 및 교육/연구기관 지원 
* 기업고객대상 스페셜 핸즈온 세션 운영 
</code></pre>

<h2>한국의 Developer Relations</h2>

<h3>고민의 시작</h3>

<pre><code>* 개발자 키우자 -&gt; 양성
* 개발자 찾자 -&gt; 커뮤니티/교류
* 개발자 뺏어오자 -&gt; 처우/브랜딩
* 개발자 지키자 -&gt; 개발문화 및 성장 시스템 활성화
</code></pre>

<h3>실패 이유</h3>

<pre><code>* 통합적 관점 실행 어려움
* 무엇보다 개발자, 커뮤니티 이해 부족
</code></pre>

<p>=> DevRel 필요성 대두</p>

<h4>Developer Relations의 사업분야</h4>

<p>기업과 개발자의 관계를 만들고 유지하며 장기적으로 회사가 기술적 우위를 점할 수 있도록 기반과 생태계를 만드는 것</p>

<pre><code>* 브랜딩
* 마케팅
* 커뮤니케이션
* 교육
* HR
* Tech CSR (기술을 통한 사회공헌)
</code></pre>

<h4>DevRel의 직무 구분</h4>

<pre><code>* 뛰어난 기술적 역량 바탕 
- 에벤젤리스트, 애드보케이트

* 기술 블로그, 컨텐츠 
- 테크니컬 콘텐츠 매니저, 기술 블로그 에디터

* 마케팅, 브랜딩등 대외 커뮤니티케이 운영
- 개발자 프로그램 매니저
</code></pre>

<p>책 "기업의 성공을 이끄는 Developer Relations"</p>

<h4>Developer Relations을 한문장으로 정리한다면</h4>

<blockquote>
  <p>"개발자를 중심으로 다양한 분야가 한데 모여 멋진 관계를 만드는 일"</p>
</blockquote>

<hr />

<h1>위대한 회사를 만드는 여정</h1>

<p><code>원티드랩 공동창업자 황리건님</code></p>

<blockquote>
  <p>"창업에 대한 이야기"<br />
  "현재 다니고 있는 회사에서 더 좋은 영향력을 나타내기"</p>
</blockquote>

<h2>창업 포부</h2>

<blockquote>
  <p>"NHN, MS 같이 위대한 회사를 만들고 싶다."</p>
</blockquote>

<p>창업하면 뭐가 좋을까 고민</p>

<h3>창업을 추천하는 부류</h3>

<pre><code>* 절박함
* 집, 주변에 창업 분위기가 있어야 한다.
* 커리어의 위기를 겪는 시기(35세)
* 창업을 안하면 답답해서 죽을 것 같음
</code></pre>

<h2>사업 아이템 결정과 검증</h2>

<pre><code>* 아이디어 월드컵으로 사업 아이템 결정
* 페이스북 페이지와 구글 설문지로 사업테스트
</code></pre>

<blockquote>
  <p>"개발자가 이직하기 위해 사이드 프로젝트를 진행하는것에 착안"</p>
</blockquote>

<pre><code>* 스타트업 방정식(스타트업 교육, 린스타트업 등) 공부  
* 실패 비용과 시간 최소화하여 연습  
* 창업을 하기위해 경험과 네트워크를 쌓음
</code></pre>

<h2>제로투원의 시기</h2>

<blockquote>
  <p>"9개월동안 월급없이 지내기"</p>
</blockquote>

<h2>원티드의 초기성장</h2>

<pre><code>* 엑셀러레이터를 통해 초기투자를 받고, 후속 투자를 받아감
* 스폰서 확보, 지지자 중요
</code></pre>

<h3>스타트업 본질(현실)</h3>

<blockquote>
  <p>"지속가능하고 확장가능한 사업모델을 찾기 위해 구성된 임시조직"</p>
</blockquote>

<pre><code>* 지속가능하지 않음  
* 확장가능하지 않음  
* 사업모델이 불안전함  
* 언젠가 없어질 조직  
</code></pre>

<h3>투자 회수의 위기를 통해 현실을 직시</h3>

<pre><code>* 불확실성: 회사가 망하거나 없어져서 실직할 리스크
* 예측불가: 최고와 최악의 리미트가 없는 업앤다운
* 체계없음: 정해져 있는 것이 없어서 스스로 만들어야 하는 환경
* 불협화음: 너무나 다른 배경, 경험, 가치관을 가진 동료와의 협업
* 고난이도: 나를 챙겨주는 사수나 매니저 없고 난이도 높은 업무
</code></pre>

<h2>생존에 필요한 목표를 설정하고 치밀한 성장 계획을 세워 실행</h2>

<blockquote>
  <p>"나보다 더 잘 할 수 있는 사람들을 꾸준히 영입"</p>
</blockquote>

<h3>스타트업을 추천하는 사람</h3>

<pre><code>* 큰 꿈을 꾸고 대단한 성취를 해보고 싶은 사람
* 긍정의 에너지
</code></pre>

<h3>회사의 미션</h3>

<blockquote>
  <p>"나답게 일하고 즐겁게 성장하는 것을 돕는다."</p>
</blockquote>

<h3>회사는 어떻게 위대해 질 수 있을까?</h3>

<pre><code>* 사업 성장과 비전
* 치밀한 전략과 실행
* 절실하게 성공을 원하는 사람들
* 위대해지고 싶다는 바램
</code></pre>

<h2>사업을 안 하고 회사에서 하기</h2>

<pre><code>* 시장과 사업에 대해서 공부하기
* 신사업이나 기존 사업을 키워보기
* 고객이 원하고 사업 성과를 내는 제품을 만들어보기
</code></pre>

<h3>제품과 개발자가 함께 성장</h3>

<pre><code>* 회사의 커리어 패스에 따라 성장하기
* 회사의 안전망과 복지 혜택 누리기
</code></pre>

<blockquote>
  <p>"팀원을 뽑는다면 나보다 높은 사람을 뽑는 것"</p>
</blockquote>

<hr />

<h1>테크리더로 성장하는 중입니다.</h1>

<p><code>인프랩 이동욱님</code></p>

<h2>테크리더의 역할?</h2>

<pre><code>* 시스템 아키텍트  
* 비즈니스분석가  
* 프로젝트 매니저  
* 소프트웨어 개발조직 리더  
</code></pre>

<h3>개발 조직의 성장</h3>

<pre><code>* Scale UP (팀의 확장)
</code></pre>

<h4>우리팀만의 채용 공고 작성하기</h4>

<pre><code>* 우리팀만을 위한 조직이 아님
* 어떤 팀인지, 어떤 사람을 원하는지 적극적으로 공개
</code></pre>

<blockquote>
  <p>"배민에서 정산시스템팀, 기술, 채용공고 관리"<br />
  "인프런에서는 외부 유튜브 출현"</p>
</blockquote>

<h5>공들인 채용 공고는 제출되는 이력서의 질이 다르다.</h5>

<blockquote>
  <p>"지원률이 변화함"<br />
  "원하는 사람이 뽑힘"</p>
</blockquote>

<h5>우리 팀원들은 기술 블로그를 안쓴다?</h5>

<blockquote>
  <p>"나부터 쓴다"
  "테크리드로써 먼저 쓰게 되면 팀원들도 쓰게 됨"</p>
</blockquote>

<h5>적합성 확인</h5>

<blockquote>
  <p>"팀 내에서 인정받는 동료에게 같은 질문을 해보고 어떤 대답을 하는지 확인"<br />
  "같은 대답을 한 지원자의 경우 대부분 비슷한 성향, 결이 같음"</p>
</blockquote>

<h5>공들여 키워놨더니 떠난다.</h5>

<pre><code>* 해결할 수 없는 문제
* 보상을 해줄 수 없으니 2~3년 떠나는 것은 확정
* 많은 시간과 노력이 필요없게 만들자
* 멘토나 사수 없이 배울 수 있도록
* 공유가 필요한 내용은 모두 위키에 "코드 리뷰, 개발팁, 도메인, 장애일지"등 문서화
* 날을 정해서 공유, 문서화
</code></pre>

<h5>DM(Direct Message) 금지</h5>

<pre><code>* 그들만의 노하우, 지식으로 끝나버린다. 업무 관련은 모두 공개 채널에서 진행하고, 
 물어봐야하는 사항은 다 문서화로 기록해서 같은 질문이 나오지 않도록 한다.
* 모든 내용을 슬랙이나 위키에서 검색할 수 있게 함
</code></pre>

<h5>최대한의 자동화로 사수가 없어도 잦은 피드백을 줄 수 있는 환경을 구성</h5>

<pre><code>* 정적분석(소나큐브)
* 테스트코드
* Lint, 코드 포맷팅
* 테스트코드 메소드명은 모두 한글로 작성한다.  
* 신규 입사자가 테스트 코드만으로 비즈니스 로직을 이해 할 수 있도록 작성한다.   
    - 테스트코드 =&gt; 정책적인 내용 이해
</code></pre>

<h5>신입 개발자를 위해 이렇게까지 해야해?</h5>

<blockquote>
  <p>"신입 개발자를 적극적으로 채용해야 한다".<br />
  "좋은 경력 개발자를 뽑는 것은 복권에 가까움"<br />
  "노력대비 가장 확실한 효과 똘똘한 신입개발자 채용"</p>
</blockquote>

<pre><code>* 제어 할 수 없는 것에 기대하면 안된다.
* 제어 할 수 있는 것에 의존하여 개선하는 것이 좋다.
* 팀에 대한 애정을 높힘
</code></pre>

<h5>낮은 수준에 사고에 익숙해야 남는 자원으로 높은 수준의 사고를 할 수 있다.</h5>

<pre><code>* 작은 것에 신경쓰게 하지 말아야 한다.
* 숙련도를 높이기 위해 가능한 가지수를 줄인다.
* 알짜 팁보다는 알고리즘,아키텍쳐등을 고민해봐야 한다.
</code></pre>

<h4>Scale UP?</h4>

<blockquote>
  <p>"적합한 사람이 모여있으면, 굳이 뭘 하지 않아도 알아서 성장</p>
</blockquote>

<h5>좋은 시니어 개발자 채용</h5>

<blockquote>
  <p>"노력의 결과가 보장되지 않음"</p>
</blockquote>

<h5>좋은 시니어들의 노하우를 흡수하자</h5>

<pre><code>* 발표하다가 팀에 반할 수 있다.
* 팀에 전파
</code></pre>

<h5>2달에 1번씩 외부 시니어 강연</h5>

<pre><code>* 이제는 먼저 필요한 노하우를  먼저 제시하는 팀원들
* 전문가를 팀에 연결시킴
</code></pre>

<h5>함께자라기</h5>

<pre><code>* 팀원들과 함께 강의 수강해보기(코드리뷰 기반의 강의)
* CTO도 리뷰받는 모습을 통해 내 동료들이 모두 계속 성장 중이라는 시그널을 팀 전체에 전파
* 회사에 관심을 갖는 효과
</code></pre>

<h5>한 팀에서 오래 근무한 시니어들은 그 자체만으로 사람이 팀이 노하우가 되기도 한다.</h5>

<pre><code>* 핵심멤버 일수록 더이상 성장하지 않을 수가 있다.
* 주니어 개발자에게 리뷰 받는 상황을 자주 만든다 (업무 Pair)
* (코드리뷰 기반) 외부 강의 함께 수강
* 테크리더가 없는 경우에도 강의를 듣도록 함
* 객관적으로 자신을 계속 들어나게 함
* 주니어와 시니어의 관계가 일방이여서는 안된다.
</code></pre>

<h5>특정한 사람만 가능한 것은 위험신호</h5>

<pre><code>* 무조건 해당 시니어는 업무 로테이션
* 특정 사람만 할 수 있는 업무 범위가 있어서는 안된다.
</code></pre>

<h4>욕망(기대) 수준 관리</h4>

<pre><code>* 기술, 방법론, 아키텍처에 대한 요구사항이 있다.
* 조직내에서 감당 가능한 범위내에서는 최대한 허용한다.
* 팀에서 달성하고 싶은 욕망이 없으면 복지, 보상에 대해서만 요구하게 됨.
</code></pre>

<h4>팀원을 설득하는 법</h4>

<pre><code>* 모든 과정에서 팀원의 신뢰가 가장 우선.
* 싫은 리더가 제안하면 다 거부한다.
</code></pre>

<h4>개인적인 관심</h4>

<pre><code>* 술자리나 친목을 의미하지 않음
* 다른 팀원들이 볼때 걱정되는 팀원 최우선
* 팀원들이 서로가 서로를 상태 체크하는 문화 조성
</code></pre>

<h4>심리적 안정감</h4>

<blockquote>
  <p>"칭찬은 공식적으로, 피드백은 개인적으로"</p>
</blockquote>

<h4>즉시 No 하지 않기</h4>

<pre><code>* 비난 하지 않을 것이라는 안정감을 주는 것
* 절대 그자리에서 즉시 부정적으로 답하지 않는다.
* 불편한 상황을 마주하게 된다 생각하면 말하지 않음
</code></pre>

<h4>절벽으로 밀지 않기</h4>

<blockquote>
  <p>"몰아세우기로 자기 계발을 강요하지 않는다"</p>
</blockquote>

<h4>스페셜리스트 vs 테크리드</h4>

<pre><code>* 모든 것은 팀원의 경험치로
* 업무 자동화, 모니터링 개선
</code></pre>

<blockquote>
  <p>"비즈니스 속도에 맞는 기술부채 수준을 관리하기 위한 준비를 한다."</p>
</blockquote>

<h4>제가 틀렸네요.</h4>

<pre><code>* 내가 틀렸다 라는 것을 말하는 용기와 연습
* 전지전능한 존재가 아니다.
</code></pre>

<h4>항상 감사하기</h4>

<hr />

<h1>프로그래머로서 산다는 것</h1>

<p><code>쏘카 CTO 류석문</code></p>

<h2>1. 개발자</h2>

<h3>필수능력</h3>

<h4>깔끔한 코드</h4>

<pre><code>* 사람이 이해하기 쉬운코드
* 변경이 용이한코드
* 유지보수 비용이 낮은 코드
</code></pre>

<h5>깔끔한 코드 작성법</h5>

<pre><code>1) 테스트를 통과할 만한 코드작성
2) 리팩터링

* 사용하는 코드만 만들기
* 리팩토링  
    - 상시, 코드커밋
* 코드읽기 
    - 코드리뷰 버그 찾는 것 x
</code></pre>

<h4>적절한 논리력</h4>

<pre><code>* 원리 탐색 능력
* 제약조건을 고려한 해법
* 단순한 디자인 (작은단위)
</code></pre>

<h5>적절한 논리력을 기르려면</h5>

<pre><code>* 있는 것 잘쓰고 
* 협업
* 사용기술 적절한 시점에 도입
</code></pre>

<h3>실천법</h3>

<pre><code>* 꾸준한 연습
* 매일 몸값 올리는 시간을 가져라
* 동기부여 요소
* 동료
* 현재 필요할만큼만 해라
</code></pre>

<h2>2. 좋은 개발자?</h2>

<h3>좋은 ~ 개발자</h3>

<pre><code>* 분야가 다양  
* 시간 변동성
</code></pre>

<blockquote>
  <p>"자신을 한정지으면 변동성에 휘둘림"</p>
</blockquote>

<p>"좋은"의 의미?<br />
    1) 공유<br />
    2) 협업</p>

<blockquote>
  <p>"시간 변동성 없음"</p>
</blockquote>

<h4>공유하는 이유</h4>

<blockquote>
  <p>"결론은 개인의 이득 때문"</p>
</blockquote>

<pre><code>* 주변이 똑똑해져야 내가 편함  
* 중요한 일을 할 수 있는 여유가 생김
* 좋은 평판을 얻을 수 있음
* 주변의 덛을 볼 확률이 올라감
</code></pre>

<h5>공유대상</h5>

<blockquote>
  <p>"무엇이든"</p>
</blockquote>

<pre><code>* 실패
    - 새로운 기술 (*내가 써보고)
* 교육세미나
    - 코드리뷰
</code></pre>

<blockquote>
  <h3>협업의 전제조건: 상대를 이해하자</h3>
</blockquote>

<h4>협읍의 필수요소: 자아존중감</h4>

<pre><code>* 자신이 존중 받을 가치가 있다고 믿음
* 있는 그대로의 자신을 인정함
* 타인의 부정적인 견해에 크게 영향 받지 않음
</code></pre>

<h5>자아 존중감을 높이는 방법</h5>

<blockquote>
  <p>"무엇을 통해 자아존중감을 높일 수 있는지 찾아야 한다."</p>
</blockquote>

<h3>좋은 개발자</h3>

<pre><code>* 공유
* 적절한 논리력
* 좋은 코드 작성능력
* 피드백
* 실천력
</code></pre>

<blockquote>
  <h4>"연습이 완벽을 만든다."</h4>
</blockquote>

<hr />

<h1>패널토의</h1>

<h2>성장에 대해 가지고 있는 신념?</h2>

<pre><code>* 메타인지(무엇을 모르는 것에 대해서 아는 것) 하는 것이 중요
* 70%는 일에서 온다. 일을 잘할려고 노력할 때 성장이 온다.
* 하루하루 계획을 해야한다
</code></pre>

<h2>좋은 CTO란?</h2>

<pre><code>* 기술로 회사의 성장을 이루는 것
* 타인을 이햬하는 능력
* 조직의 미흡한것 을 감수하고 가야할 때도 있어야 한다.
* 남을 내편으로 만드는 능력이 필요함
* CTO는 하나의 역할, 좋은 목표인가 고민해보고 자신이 뭘 좋아하는지 자신의 성향을 알아야 한다.
</code></pre>

<blockquote>
  <p>"자신이 좋은 것을 할 수 있는 선택지를 찾아서 찾아가면 좋다."<br />
  "회사에서 잘할 수 있는 방법을 찾아야한다."</p>
</blockquote>

<h2>조직내에서 욕망관리</h2>

<pre><code>* 신기술 적극 도입
* 욕망이 나올 수 있도록 심리적 안정감 중요
* 새로운 기술 도입하고 싶은 리스트 작성
</code></pre>

<blockquote>
  <p>"필요가 있으면(견고한 소프트웨어를 만들기 위해) 강제 해야 한다."<br />
  "창의적인 능력이 있어도 자세교정이 가능할때까지 노력해야 할 부분이 있다."</p>
</blockquote>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/wezterm-keybinding</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/wezterm-keybinding" />
    <title>Wezterm에서 Vim 비주얼 블럭모드(ctrl + q) 한번에 입력이 안될 경우</title>
    <published>2022-12-09T00:00:00+00:00</published>
    <updated>2022-12-09T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">wezterm은 윈도우, 리눅스, 맥에서 사용할 수 있는 러스트기반의 터미널이다.

Vim에서 비주얼모는 일반모드에서 &#039;v&#039;키를 입력하여 진입 가능하고 
커서를 움직여서 텍스트를 선택 할 수 있다.......</summary>
    <content type="html"><![CDATA[
        <p><a href="https://wezfurlong.org/wezterm/">wezterm</a>은 윈도우, 리눅스, 맥에서 사용할 수 있는 러스트기반의 터미널이다.</p>

<p>Vim에서 비주얼모는 일반모드에서 'v'키를 입력하여 진입 가능하고 
커서를 움직여서 텍스트를 선택 할 수 있다.</p>

<p>비주얼 블럭모드는 <code>ctrl + v</code> 또는 <code>ctrl + q</code>를 통해서 진입 할 수 있는데 
여러줄을 공백 또는 블럭으로 모양을 만들어서 편집이 가능하다.
나는 붙여넣기로 <code>ctrl + v</code>를 사용하고 있어서 <code>ctrl + q</code>를 통해 비주얼 블럭모드로 진입한다.</p>

<p>오늘 맥에서 wezterm을 사용하여 Vim으로 작업해보니
비주얼모드로 진입하기 위해 <code>ctrl + q</code>를 두번 입력해야 했는데 찾아보니 이슈가 있었다.</p>

<p><a href="https://github.com/wez/wezterm/issues/2630">CTRL-Q needs to be pressed twice to register in macOS #2630
</a></p>

<p>맥의 최신 릴리즈에서 CTRL키가 맥의 입력기 IME를 통해 제어 되면서
wezterm의 최신 나이틀리 버전에 <code>use_ime</code> 옵션이 생기게 되었고 기본으로 활성화 <code>use_ime=true</code>  된다고 한다.</p>

<h1>해결</h1>

<p>wezterm 설정 <code>wezterm.lua</code> 파일에 다음을 추가</p>

<pre><code class="language-lua">use_ime=false 
</code></pre>

<p>또는 use_ime 설정을 바꾸고 싶지 않다면</p>

<pre><code class="language-lua">{ mods = "CTRL", key = "q", action=wezterm.action{ SendString="\x11" } },
</code></pre>

<p>을 추가하여 해결 할 수 있다.</p>

<p>본인은 <code>use_ime=true</code> 설정을 사용하기 위해 아래의 방법대로 설정하였다.<br />
<a href="https://github.com/1ocate/dotfiles/blob/main/.wezterm.lua">설정 예시</a></p>

<h3>참고</h3>

<p><a href="https://github.com/wez/wezterm/issues/2630">CTRL-Q needs to be pressed twice to register in macOS #2630
</a><br />
<a href="https://chat.openai.com/chat">chatGPT</a> (번역 참고)</p>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/fishshell</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/fishshell" />
    <title>Fish shell 세팅</title>
    <published>2022-12-04T00:00:00+00:00</published>
    <updated>2022-12-04T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">sudo echo 명령어 사용시 Permission denied 문제 해결하기
Installing Fish shell on MacOS (Intel and M1) using brew...</summary>
    <content type="html"><![CDATA[
        <h1>설치(Silicon Mac)</h1>

<pre><code class="language-bash"><br />brew install fish

# 쉘 등록
sudo echo '/opt/homebrew/bin/fish' &gt;&gt; sudo /etc/shells &gt; /dev/null

# 기본 쉘 변경

chsh -s /opt/homebrew/bin/fish

# fish 경로 추가
fish_add_path /opt/homebrew/bin

#fisher 설치 
curl -sL https://git.io/fisher | source &amp;&amp; fisher install jorgebucaran/fisher

#powerline theme
fisher install IlanCosman/tide@v5

#fzf 플러그인 의존성 해결
brew install fd
brew install bat
brew install fzf

#fzf 플러그인 설치
fisher install PatrickF1/fzf.fish







</code></pre>

<h3>참고</h3>

<p><a href="https://www.lesstif.com/lpt/sudo-echo-permission-denied-89556053.html">sudo echo 명령어 사용시 Permission denied 문제 해결하기</a><br />
<a href="https://gist.github.com/gagarine/cf3f65f9be6aa0e105b184376f765262">Installing Fish shell on MacOS (Intel and M1) using brew
</a></p>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/202211-story</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/202211-story" />
    <title>11월 회고</title>
    <published>2022-11-26T00:00:00+00:00</published>
    <updated>2022-11-26T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">11월에 있었던 일들을 간단히 회고



날씨가 추워지기전 이사를 완료하기 위해 고군분투 했다.

그렇게 11월 첫주에 이사를 했는데, 오늘까지 날씨 통틀어서 가장 추운 날이였다.

커리어스킬에......</summary>
    <content type="html"><![CDATA[
        <p>11월에 있었던 일들을 간단히 회고</p>

<h1>이사</h1>

<p>날씨가 추워지기전 이사를 완료하기 위해 고군분투 했다.</p>

<p>그렇게 11월 첫주에 이사를 했는데, 오늘까지 날씨 통틀어서 가장 추운 날이였다.</p>

<p><a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=187823405">커리어스킬</a>에 나오는 '총구가 뒤에서 겨누는' 상황 인것 같지만 
이사를 통해 좀 더 열심히 일하고 공부하게 되었다.</p>

<p>드디어 나만의 책상이 생겼다!</p>

<h1><a href="https://github.com/1ocate/yankclip.vim">Vim 플러그인 제작</a></h1>

<p><img src="https://user-images.githubusercontent.com/29521447/202831340-3574ec2f-17dd-4eea-8439-1ffe7ec9b6c9.gif" alt="yankclip" /></p>

<p>yankclip은 <a href="/vim-wsl-clipboard/">WSL에서 Vim의 레지스터 "0 (Yank register)와 윈도우 클립보드와 연동하기</a>를 플러그인화 시킨 것이다.</p>

<p>혼자 쓸때는 몰랐는데, 플러그인으로 만들면서 공개하는 만큼 대충해서는 안된다는 생각이 들었다.</p>

<p>':y'와 ':d'를 구분하기위해 캐시를 두었지만, 같은 값을 ':y' 혹은 ':d' 하였을 때는 갱신이 안되는 문제가 있어서 고심 중이다.</p>

<!--
회사에서는 [WSL](https://ko.wikipedia.org/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4%EC%9A%A9_%EC%9C%88%EB%8F%84%EC%9A%B0_%ED%95%98%EC%9C%84_%EC%8B%9C%EC%8A%A4%ED%85%9C), 집에서는 MAC OS를 사용하면서 터미널을 띄우고 NeoVim을 사용중인데, 터미널에서 실행한 Vim의 내용을 클립보드로 복사하고 싶었다.

터미널의 크기보다 코드나, 텍스트 라인이 길 경우에 마우스로 드래그 하거나, 화면을 계속 이동시켜서 Vim의 내용을 복사하는게 까다로웠다.

물론 MAC에서는 터미널의 Vim의 "+ 레지스터가 맥의 클립보드와 연결 되어있기 때문에 yank 할때 "+ 레지스터로 넣어주기만 하면 된다.

## 참고
[vim-레지스터에-관해](https://soooprmx.com/vim-%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0%EC%97%90-%EA%B4%80%ED%95%B4/)
 
WSL에서는 윈도우 안에 linux를 띄운 형식이기에, "+ 레지스터를 사용할 수 없다.

해결 방법으로는 Vim의autocmd 'TextYankPost'를 이용하여 '/mnt/c/Windows/System32/clip.exe' 명령에 넣어주면 되는데
문제는 'TextYankPost'는 'Yank', 'dd' 일때 실행되게 된다.  즉 라인을 삭제해도 실행하게 된다.

Vim에서는 복사, 삭제를 각각의 레지스터로 저장하는데 클립보드는 한공간에 저장되므로 의도하지 않게 클립보드 내용이 날아가게 된다.
이 문제를 해결하기 위해 
-->

<h1>larvel 실무</h1>

<p>회사에서 레거시 유지보수만 하다가, 고도화 작업을 하면서 드디어 larvel도 사용해보고 있다.
이번에 라라벨을 처음하는 건 아니지만, 다시 차근차근하게 보고있다.</p>

<p>약점인 <a href="https://dev-coco.tistory.com/97">Rest API</a>를 만들고 개선 할 수 있는 좋은 기회가 되길 기대한다.</p>

<h1>방황과 고민, 답.</h1>

<p>무엇이라도 해야하는데 결정하지 못하고 우왕좌왕하는 시간이 많았던 올해이다.</p>

<p>방황하지만 우리는 언제나 답을 알고 있다.</p>

<p>'운동 해야지'
'공부 해야지'
'계획세워야지'
'꾸준하게 해야지'</p>

<p>10년을 어영부영 보냈다면 이미 답을 내야하지 않을까?
10년을 잘 못썼다는 생각 이전에 바로 지금, 하루에 1분, 5분, 10분 내가 변화하고 싶은 부분에 대한 노력이 있는가?</p>

<p>시간이 가는 것에 조급하지 말고, 지금 단 1분이라도 어떻게 쓸까 고민 해보는게 좋지 않을까?</p>

<p>아직 한달이라는 시간이 남았다.</p>

<p>가장 중요한 것은 비관하지 말것, 하루, 한달, 1년전 자신을 비교하되 타인과 절대 비교하지 말것.</p>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/git-hook-script</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/git-hook-script" />
    <title>특정 브랜치에 특정 커밋 메세지를 포함 하지 않는 경우 푸시 제어하기</title>
    <published>2022-11-01T00:00:00+00:00</published>
    <updated>2022-11-01T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">현재 회사에서 크게 3가지 단계로 검증 후 운영서버에 배포하고 있다.

Local 브랜치 &gt; Stage 브랜치 &gt; Deploy 브랜치 &gt; 운영서버 배포

작업을 진행할 때 Local 브랜치 및 Stage 브랜치에서는 Git......</summary>
    <content type="html"><![CDATA[
        <p>현재 회사에서 크게 3가지 단계로 검증 후 운영서버에 배포하고 있다.</p>

<p>Local 브랜치 > Stage 브랜치 > Deploy 브랜치 > 운영서버 배포</p>

<p>작업을 진행할 때 Local 브랜치 및 Stage 브랜치에서는 Git 컨벤션에 맞게 커밋 메세지를 만들고,
배포전 단계인 Deploy 브랜치에 커밋을 생성할 때 해당 커밋 메세지를 수정하여 Deploy를 넣어준다.<br />
예) Deploy : xxx 항목 제거</p>

<p>이후 변경된 파일 내역과 함께 배포요청을 하면, 담당자가 운영서버로 배포하게 된다.</p>

<p>나는 보통 Local 브랜치에서 커밋 메세지를 만들고, Stage에 cherry-pick을 한다음 검수가 완료되면
Deploy에 동일하게 cherry-pick을 한 후에 <code>git commit --amend</code> 하여 "Deploy" 단어를 추가하고 커밋해서 푸시하였다.</p>

<pre><code>이번에는 그냥 배포하지만 다음부터는 Git 컨벤션을 지켜주시겠어요?
</code></pre>

<p>나름 내부의 룰을 잘 지킨다고 생각하고 있었는데, 배포 담당자에게 Deploy 브랜치 커밋에 "Deploy"라는 단어가 포함되지 않았다는 이야기를 들었다.</p>

<p>확인해보니, cherry-pick 이후에 커밋 메세지 수정을 잊었던 경우가 종종 있었고, 반복되다보니 담당자가 이야기를 해준 것이였다.</p>

<h3>문제</h3>

<p>특정 브랜치에 요구되는 커밋 조건이 있는데, cherry-pick으로 다른브랜치의 커밋을 가져와서 푸시하는 경우 커밋을 수정하는 것을 잊을 때가 많다.</p>

<h3>해결방법</h3>

<p>특정 브랜치에 요구되는 커밋 조건을 확인하여 조건에 부합하지 않으면 푸시 제한을 하게 하면 어떨까?</p>

<p>Git 정책에 <a href="https://git-scm.com/book/ko/v2/Git%EB%A7%9E%EC%B6%A4-%EC%A0%95%EC%B1%85-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0">관련</a>된 예제를 확인해보니
<a href="https://git-scm.com/book/ko/v2/Git%EB%A7%9E%EC%B6%A4-Git-Hooks">Git Hook</a>으로 각 조건에 따라 스크립트를 사용 할 수 있는 것을 알게 되었다.</p>

<p>이번 문제는 cherry-pick 후 push 할때 스크립트를 실행해야 하므로 pre-push를 사용하였다.</p>

<blockquote>
  <p>pre-push 훅은 git push 명령을 실행하면 동작하는데 리모트 정보를 업데이트 하고 난 후 리모트로 데이터를 전송하기 전에 동작한다.<br />
  리모트의 이름과 주소를 파라미터로 전달받으며 stdin 을 통해 업데이트 할 해시 리스트를 전달받는다. 
  Push 하기 전에 커밋이 유효한지 확인하는 용도로 사용할 수 있다. 
  훅에서 0이 아닌 값을 반환하면 Push를 중지시킨다.</p>
</blockquote>

<p>그리고 다음의 경로에 아래의 내용을 넣었다. "Project_name/.git/hooks/pre-push"</p>

<pre><code class="language-bash"><br />#!/bin/bash

branch=(`git branch --show-current`)
zero=$(git hash-object --stdin &lt;/dev/null | tr '[0-9a-f]' '0')

if test "$branch" = "DEPLOY"
then
    while read local_ref local_oid remote_ref remote_oid
    do
        # 리모트 서버에 푸시 할 것이 없으면 그대로 종료
        if test "$local_oid" = "$zero"
        then
            # Handle delete
            :
        else
            # 커밋이 1개인지 범위인지 확인
            if test "$remote_oid" = "$zero"
            then
                # New branch, examine all commits
                range="$local_oid"
            else
                # Update to existing branch, examine new commits
                range="$remote_oid..$local_oid"
            fi

            # 커밋 메세지 체크
            SHA1s=(`git rev-list $range`)
            for SHA1 in "${SHA1s[@]}"
            do
                #Hash 값을 통해 커밋 메세지 가져오기
                commit=$(git cat-file commit "$SHA1" | sed '1,/^$/d')
                check_commit=$(echo $commit | grep -i "$branch" )

                # 커밋에 특정 브랜치 푸시에 필요한 내용 체크
                if ! test -n "$check_commit"
                then
                    # 특정문자를 포함하지 않는 커밋의 Hash 저장
                    errors+=("&lt;$SHA1&gt; $commit")
                fi
            done

            # 조건에 맞지 않으면 해당 커밋을 출력하고 종료
            if  test -n "$errors"
            then

                echo &gt;&amp;2 "Found commit message not include $branch, not pushing"
                for  error in "${errors[@]}"
                do
                    echo "$error"
                done
                exit 1
            fi
        fi
    done
fi

exit 0 

</code></pre>

<p>이제 특정 브랜치(위의 예시에서는 DEPLOY)에 cherry-pick 후 push 할때 커밋에 특정 문구 (위의 예시에서는 Deploy)가 포함되지 않으면 해당 커밋을 출력해주고 푸시가 되지 않는다.</p>

<h3>참고</h3>

<p><a href="https://git-scm.com/book/ko/v2/Git%EB%A7%9E%EC%B6%A4-Git-Hooks">Git맞춤 - Git Hooks</a> 
<a href="https://git-scm.com/book/ko/v2/Git%EB%A7%9E%EC%B6%A4-%EC%A0%95%EC%B1%85-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0">Git맞춤 - 정책 구현하기</a></p>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/glpi-ko</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/glpi-ko" />
    <title>Glpi에서 pdf로 리스트 다운로드 할때 한글이 &#039;???&#039;등으로  깨질 경우 확인 사항</title>
    <published>2022-10-29T00:00:00+00:00</published>
    <updated>2022-10-29T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">Glpi는 헬프데스크 및 IT 자산을 관리하기 위한 오픈 소스 도구다.

Glpi의 자산리스트에서 내보내기(Export) 할때 PDF, SLK, CSV등의 파일로 저장할 수 있는데,
만약 한글로 작성한 데이터가 있다면......</summary>
    <content type="html"><![CDATA[
        <p><a href="https://glpi-project.org/">Glpi</a>는 헬프데스크 및 IT 자산을 관리하기 위한 오픈 소스 도구다.</p>

<p>Glpi의 자산리스트에서 내보내기(Export) 할때 PDF, SLK, CSV등의 파일로 저장할 수 있는데,<br />
만약 한글로 작성한 데이터가 있다면 아래의 이미지와 같이 한글이 '???'로 나오게 된다.</p>

<p><img src="/assets/img/post-3-1.png" alt="export_pdf_korean_problem" /></p>

<h3>해결방법</h3>

<p>1) 우측 상단에 프로필 누르고 "내 설정" 클릭
<img src="/assets/img/post-3-2.png" alt="mysetting" /></p>

<p>2) "PDF" 내보내기 글꼴 선택 후 "Sung"을 입력해서 나온 한글폰트 2개 중 적절한 폰트 선택
<img src="/assets/img/post-3-3.png" alt="select_pdf_font" /></p>

<p>3) 선택 후 출력 테스트
<img src="/assets/img/post-3-4.png" alt="solve_problem" /></p>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/vim-wsl-clipboard</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/vim-wsl-clipboard" />
    <title>WSL에서 Vim의 레지스터 &quot;0 (Yank register)와 윈도우 클립보드와 연동하기</title>
    <published>2022-10-18T00:00:00+00:00</published>
    <updated>2022-10-18T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">터미널을 통해서 Vim을 사용할 때 라인이 길어지게  되면 드레그 복사 하기가 번거로워진다.

Vim의 레지스터 &quot;0(yank)와 윈도우의 Clipboard를 연결 하는 방법은 검색을 통해 쉽게 찾을 수 있다.......</summary>
    <content type="html"><![CDATA[
        <p>터미널을 통해서 Vim을 사용할 때 라인이 길어지게  되면 드레그 복사 하기가 번거로워진다.</p>

<p>Vim의 레지스터 "0(yank)와 윈도우의 Clipboard를 연결 하는 <a href="https://hidekuma.github.io/vim/wsl/synchronize-system-clipboard-vim-on-WSL/">방법</a>은 검색을 통해 쉽게 찾을 수 있다.</p>

<p>다만 한가지 아쉬운 점이 있는데, Yank 할때만 클립보드에 연동되는 것이 아니라<br />
삭제할 때 Vim 레지스터 ""를 갱신하게 되면서 <strong>의도하지 않은 클립보드 갱신</strong>이 일어나게 되었다.</p>

<p>고민 중에 <a href="https://johngrib.github.io/">기계인간</a>님의 <a href="https://johngrib.github.io/wiki/vim/numbered-register-shift/">Vim 숫자레지스터 쉬프터 만들기</a>라는 글을 보게 되었다.</p>

<p>기계인간님은 내가 겪었던 의도하지 않은 레지스터 갱신을 구별 하기 위해, 특정 레지스터의 기존 값을<br />
캐시로 변수에 등록하여 이벤트가 발생했을 때 
해당 레지스터와 값을 비교하여 실제적으로 이벤트가 일어났는지 확인 처리 하셨다.</p>

<p>이를 바탕으로 코드를 조합하였다.</p>

<p>다음은 완성된 코드이다.<br />
<a href="https://github.com/1ocate/dotfiles/blob/main/nvim/init.vim">github에서 보기</a></p>

<pre><code class="language-viml"><br />"F9를 토글하여 Vim 레지스터 '"@'와 윈도우 클립보드 연동 활성여부 선택 (기본 활성)
nnoremap &lt;F9&gt; :call &lt;SID&gt;WSLYank_toggle()&lt;CR&gt;

augroup WSLYank_autocmd

    " 초기화
    let g:wsl_clipboard_enble = 1
    let s:global_yank_cache_0 = @0
    let s:clip = '/mnt/c/Windows/System32/clip.exe' 

    if executable(s:clip)
            autocmd TextYankPost * :call s:WSLYank()
    end

    function! s:WSLYank_toggle()
        let g:wsl_clipboard_enble = ! g:wsl_clipboard_enble
        echom "시스템 클립보드 사용 여부 " . g:wsl_clipboard_enble
        let s:clip = ''
    endfunction

    function! s:save_cache()
        let s:global_yank_cache_0 = @0
    endfunction

    function! s:WSLYank()
            if ! v:true == g:wsl_clipboard_enble
                return
            endif
            if s:global_yank_cache_0 != @0
                call system('echo '.shellescape(join(v:event.regcontents, "\&lt;CR&gt;")).' | '.s:clip)
                call s:save_cache()
                return
            endif
    endfunction

augroup END
</code></pre>

<h3>참고</h3>

<p><a href="https://hidekuma.github.io/vim/wsl/synchronize-system-clipboard-vim-on-WSL/">Vim: WSL에서 클립보드에 복사하는 방법</a><br />
<a href="https://johngrib.github.io/wiki/vim/numbered-register-shift/">Vim 숫자 레지스터 쉬프터 만들기</a></p>
    ]]></content>
</entry>
            <entry>
    <id>https://1ocate.github.io/blog-make-with-jigsaw</id>
    <link type="text/html" rel="alternate" href="https://1ocate.github.io/blog-make-with-jigsaw" />
    <title>Jigsaw를 사용하여 블로그 만들기</title>
    <published>2022-09-01T00:00:00+00:00</published>
    <updated>2022-09-01T00:00:00+00:00</updated>
    <author>
        <name>1ocate</name>
    </author>
    <summary type="html">현재 이 웹사이트는 Jigsaw로 만들었다.



Jamstack.com에 보면 정적 사이트를 만들 수 있는 여러가지 프로젝트가
있다.
업무 외의 상황에서도 PHP 숙련도를 높히기 위해 PHP기반의 Jigsaw를 사용해서......</summary>
    <content type="html"><![CDATA[
        <p>현재 이 웹사이트는 Jigsaw로 만들었다.</p>

<h3>왜 많은 정적 사이트 생성기(Static Site Generator)중에 Jigsaw를 골랐는가?</h3>

<p><a href="https://jamstack.com/generators">Jamstack.com</a>에 보면 정적 사이트를 만들 수 있는 여러가지 프로젝트가
있다.
업무 외의 상황에서도 PHP 숙련도를 높히기 위해 PHP기반의 <a href="https://jigsaw.tighten.com">Jigsaw</a>를 사용해서 블로그를 시작하게 되었다.</p>

<p>그뿐만 아니라 라라벨 Blade 구문으로 레이아웃과 포스팅을 작성할 수 있고, Md(Mark Down) 문법으로 포스팅을 작성 할 수 있기 때문에 후에 정적 사이트 생성기 프로젝트를 바꾸게 되더라도 수월하게 마이그레이션 할 수 있을거라 생각한다.</p>

<p>*참고: <a href="https://builtwithjigsaw.com/">Jigsaw를 사용하여 만든 사이트들</a></p>

<h3>Jigsaw를 사용하여 Github Page로 배포하기</h3>

<p>Jigsaw에 관한 설명은 <a href="https://jigsaw.tighten.com/docs/installation/">여기</a>에 전반적으로 설명이 되어있으나, 헤멨던 부분을 정리하고자 한다.</p>

<h4>1. 로컬 개발 환경 생성</h4>

<p>빠르게 로컬에서 띄워보기:</p>

<pre><code class="language-shell"># 로컬 경로 생성 
mkdir my-jigsaw-blog

# Jigsaw 설치
cd my-jigsaw-blog
composer require tightenco/jigsaw

# 스타터 탬플릿 스캐폴딩(공식문서에는 다른 탬플릿 존재)
vendor/bin/jigsaw init blog

# 로컬환경에서 실행
npm run watch
</code></pre>

<h4>2. Github Page로 배포하기</h4>

<p>최상위 경로에 ".github/workflows/main.yml" 파일을 생성한 후 아래의 내용을 넣고
배포가 이루어졌을때 깃헙 페이지 내에서 페이지를 빌드하도록 한다.</p>

<pre><code class="language-yml">name: Build &amp; Publish

on:
  push:
    branches:
      - master

jobs:
  build-site:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Composer Dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
    - name: Install NPM Dependencies
      run: npm install
    - name: Build Site
      run: npm run prod
    - name: Stage Files
      run: git add -f build_production
    - name: Commit files
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git commit -m "Build for deploy"
    - name: Publish
      run: |
        git subtree split --prefix build_production -b gh-pages
        git push -f origin gh-pages:gh-pages
</code></pre>
    ]]></content>
</entry>
    </feed>
